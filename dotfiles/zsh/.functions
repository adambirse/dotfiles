# Create a new directory and enter it
function mkd() {
    mkdir -p "$@" && cd "$@"
}

#usage: jira_git TICKET_REF
# obviously not just for use with jira but this was my use case
function jira_git() {
    git log --pretty=format:"%an%x09%ad%x09%s" --grep="$@" >"$@.txt"
    cat "$@.txt"
}
#usage: gc_count <name>
# list number of commits
function gc_count() {
    git shortlog -sne | grep "$@"
}

#usage: gac <commit_message>
# short hand to  add,commit and push
function gac() {
    ga .
    gc -m "$@"
    git push
}

#!/bin/bash
function measure() {
    abc='npm run build'
    echo 'before'
    now=$(date +"%T")
    echo "Current time : $now"
    npm run build
    now=$(date +"%T")
    echo "Current time : $now"
    echo 'after'
}

function docker_stop_all_containers() {
    if [ "$(docker ps -q)" ]; then
        echo "Stopping containers"
        docker stop $(docker ps -q)
    else
        echo "No running containers to stop."
    fi
}

function docker_remove_all_containers() {
    if [ "$(docker ps -qa)" ]; then
        echo "Removing containers"
        docker rm $(docker ps -aq)
    else
        echo "No containers to remove."
    fi
}

function docker_remove_all_images() {
    if [ "$(docker images -aq)" ]; then
        echo "Removing images"
        docker rmi -f $(docker images -aq)
    else
        echo "No images to remove."
    fi
}

function docker_nuke() {
    docker_stop_all_containers
    docker_remove_all_containers
    docker_remove_all_images
}

